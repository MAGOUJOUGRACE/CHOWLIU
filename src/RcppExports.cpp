// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Naive
NumericVector Naive(NumericMatrix& weight_mat);
RcppExport SEXP _CHOWLIU_Naive(SEXP weight_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type weight_mat(weight_matSEXP);
    rcpp_result_gen = Rcpp::wrap(Naive(weight_mat));
    return rcpp_result_gen;
END_RCPP
}
// Prim_max_cpp
NumericVector Prim_max_cpp(NumericMatrix& weight_mat);
RcppExport SEXP _CHOWLIU_Prim_max_cpp(SEXP weight_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type weight_mat(weight_matSEXP);
    rcpp_result_gen = Rcpp::wrap(Prim_max_cpp(weight_mat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CHOWLIU_Naive", (DL_FUNC) &_CHOWLIU_Naive, 1},
    {"_CHOWLIU_Prim_max_cpp", (DL_FUNC) &_CHOWLIU_Prim_max_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CHOWLIU(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
